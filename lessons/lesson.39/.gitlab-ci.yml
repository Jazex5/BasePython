# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.9-buster

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip


stages:
  - init
  - lint
  - test
  - deploy

init-job:
  stage: init
  script:
    - python -V  # Print out python version for debugging


lint-job:
  stage: lint
  script:
    - pip install flake8  # you can also use tox
    # stop the build if there are Python syntax errors or undefined names
    - flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    - flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

test-job:
  stage: test
  services:
    - postgres:12
  variables:
    POSTGRES_DB: app
    POSTGRES_USER: user
    POSTGRES_PASSWORD: password
    PG_HOST: postgres
    DB_CONN_URI: postgresql+psycopg2://user:password@postgres:5432/app
    COVERAGE_DIR: "coverage-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
  before_script:
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
    - flask db upgrade
  script:
    - echo "Run pytest"
    - pytest -s -vv -rsx --cov=models --cov=views --cov-report=html:$COVERAGE_DIR tests/
  artifacts:
    name: "coverage-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - $COVERAGE_DIR
    expire_in: 1 week
    when: on_success


deploy-job:
  stage: deploy
  script:
    - echo build image and push
